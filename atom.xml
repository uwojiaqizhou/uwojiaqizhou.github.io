<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jiaqi Zhou</title>
  <subtitle>Web developer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-03-01T13:42:15.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jiaqi Zhou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>cb make a tree</title>
    <link href="http://yoursite.com/2017/02/28/cb-make-a-tree/"/>
    <id>http://yoursite.com/2017/02/28/cb-make-a-tree/</id>
    <published>2017-03-01T01:12:41.000Z</published>
    <updated>2017-03-01T13:42:15.000Z</updated>
    
    <content type="html"><![CDATA[<div class="history-article">本文原始地址在 <a href="http://www.cnblogs.com/hustskyking/archive/2013/04/22/make-a-tree.html" target="_blank">博客园</a>.</div>

<p>在使用frameset布局的时候，经常会用到目录树，我们可以把一棵树写死，但是更多的情况是，这棵树需要随时被改动，所以我们期望的是他能够被动态的构建。</p><br><p>MVC，算是了解一点，那本文就把这棵树根据M-V-C给拆开分解吧。</p><br><a id="more"></a><br><br><p><img src="http://images.cnitblog.com/blog/387325/201304/22110251-818c9f213e1241cf8c88b5a769638ede.png" alt=""></p><br><p><a title="DEMO" href="http://qianduannotes.sinaapp.com/test/tree.html" target="_blank">点击链接demo→</a></p><br><p>下面就来看看这棵树是怎么构建的。　</p><br><p>　</p>

<h3>Module [数据层]</h3><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">var tree = &#123;</div><div class="line">            &quot;id&quot;: 0,</div><div class="line">            &quot;a1&quot;: &#123;</div><div class="line">                &quot;id&quot;: 1,</div><div class="line">                &quot;name&quot;: &quot;a1&quot;,</div><div class="line">                &quot;children&quot;: &#123;</div><div class="line">                    &quot;b1&quot;: &quot;b1_1&quot;,</div><div class="line">                    &quot;b2&quot;: &quot;b1_2&quot;,</div><div class="line">                    &quot;b3&quot;: &quot;b1_3&quot;</div><div class="line">                &#125;</div><div class="line">            &#125;,</div><div class="line">            &quot;a2&quot;: &#123;</div><div class="line">                &quot;id&quot;: 1,</div><div class="line">                &quot;name&quot;: &quot;a2&quot;,</div><div class="line">                &quot;children&quot;: &#123;&#125;</div><div class="line">            &#125;,</div><div class="line">            &quot;a3&quot;: &#123;</div><div class="line">                &quot;id&quot;: 1,</div><div class="line">                &quot;name&quot;: &quot;a3&quot;,</div><div class="line">                &quot;children&quot;: &#123;</div><div class="line">                    &quot;b1&quot;: &quot;b3_1&quot;,</div><div class="line">                    &quot;b2&quot;: &quot;b3_2&quot;,</div><div class="line">                    &quot;b3&quot;: &quot;b3_3&quot;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;;</div></pre></td></tr></table></figure><br><br><p>这是一颗两层的目录树，用ID来表示层级关系，name来表示改层的名字（也就是节点Text内容吧）。</p><br><br><br><h3>Control [控制层]</h3>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">var Tree = function ( module )&#123;</div><div class="line">    function createNodeList( obj ) &#123;</div><div class="line">        //创建ul节点和documentFragmeng中间变量</div><div class="line">        var n = document.createElement(&quot;ul&quot;),</div><div class="line">            docfrag = document.createDocumentFragment();</div><div class="line"></div><div class="line">        //判断obj是根节点还是孩子节点</div><div class="line">        if(obj.id == 0) &#123;</div><div class="line">            n.setAttribute(&quot;class&quot;, &quot;tree_0&quot;);</div><div class="line"></div><div class="line">            for(var key in obj) &#123;</div><div class="line">                if(key == &quot;id&quot;) continue;</div><div class="line">                //将节点插入</div><div class="line">                var c = document.createElement(&quot;li&quot;),</div><div class="line">                    span = document.createElement(&quot;span&quot;);</div><div class="line">                span.appendChild(document.createTextNode( obj[key].name ));</div><div class="line">                c.appendChild(span);</div><div class="line">                docfrag.appendChild( c );</div><div class="line">            &#125;</div><div class="line">        &#125;else if(obj.id &amp;&amp; obj.id == 1) &#123;</div><div class="line">            n.setAttribute(&quot;class&quot;, &quot;tree_1&quot;);</div><div class="line"></div><div class="line">            for(var key in obj) &#123;</div><div class="line">                if(key == &quot;id&quot; || key == &quot;name&quot; || !obj.children) continue;</div><div class="line">                for( var item in obj.children)&#123;</div><div class="line">                    //将节点插入</div><div class="line">                    var c = document.createElement(&quot;li&quot;);</div><div class="line">                    c.appendChild(document.createTextNode( obj.children[item] ));</div><div class="line">                    docfrag.appendChild( c );</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        n.appendChild( docfrag );</div><div class="line">        //返回开始构建的ul节点</div><div class="line">        return n;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //隐藏及显示 工具函数</div><div class="line">    function toggle(c)&#123;</div><div class="line">        c.style.display = ((c.style.display == &quot;none&quot;) ? &quot;&quot; : &quot;none&quot;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    function createTree( obj ) &#123;</div><div class="line">        var root, child, count = 0;</div><div class="line"></div><div class="line">        root = createNodeList( obj );</div><div class="line">        for(var key in obj)&#123;</div><div class="line">            if(obj[key] == &quot;id&quot; || !obj[key].children) continue;</div><div class="line">            child = createNodeList(obj[key]);</div><div class="line">            root.children[count].appendChild( child );</div><div class="line">            //count来判断插入的位置</div><div class="line">            count++;</div><div class="line">        &#125;</div><div class="line">        return root;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    var T = createTree(module);</div><div class="line">    var list = T.children;</div><div class="line">    for(var i = 0, len = list.length; i &lt; len; i++)&#123;</div><div class="line">        list[i].getElementsByTagName(&quot;span&quot;)[0].onclick = function()&#123;</div><div class="line">            var obj = this.nextSibling;</div><div class="line">            toggle(obj);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return T;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这里边创建了三个函数，其中</p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">createNodeList() //适用于构建一个树子节点</div></pre></td></tr></table></figure>
<p>其中使用documentFragment作为一个节点缓存器，先把节点放置到documentFragment中，然后统一插入到ul，这也是比较常用的使用方式。</p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">createTree() //构建一棵树</div></pre></td></tr></table></figure>
<p>基本整棵树的构建就是分为这两步，前者负责创建一个子节点，后者构建一棵树。</p><br><p>在这颗树中绑定了click事件，让其可以折叠，当然也可以在Tree这个类里绑定更多的方法，这个就靠自己发挥了。</p>


<h3>View [视图层]</h3>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">window.onload = function()&#123;</div><div class="line">    var T = new Tree(tree);</div><div class="line">    document.getElementsByTagName(&quot;body&quot;)[0].appendChild(T);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>整棵树的构建，主要用到的是DOM元素的处理，这个必须牢牢掌握！</p>
]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;history-article&quot;&gt;本文原始地址在 &lt;a href=&quot;http://www.cnblogs.com/hustskyking/archive/2013/04/22/make-a-tree.html&quot; target=&quot;_blank&quot;&gt;博客园&lt;/a&gt;.&lt;/div&gt;

&lt;p&gt;在使用frameset布局的时候，经常会用到目录树，我们可以把一棵树写死，但是更多的情况是，这棵树需要随时被改动，所以我们期望的是他能够被动态的构建。&lt;/p&gt;&lt;br&gt;&lt;p&gt;MVC，算是了解一点，那本文就把这棵树根据M-V-C给拆开分解吧。&lt;/p&gt;&lt;br&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="tech" scheme="http://yoursite.com/tags/tech/"/>
    
      <category term="cnblogs" scheme="http://yoursite.com/tags/cnblogs/"/>
    
      <category term="tree" scheme="http://yoursite.com/tags/tree/"/>
    
  </entry>
  
  <entry>
    <title>ajax request management</title>
    <link href="http://yoursite.com/2017/02/28/ajax-request-management/"/>
    <id>http://yoursite.com/2017/02/28/ajax-request-management/</id>
    <published>2017-03-01T00:57:56.000Z</published>
    <updated>2017-03-01T02:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<div class="history-article">本文原始地址在 <a href="http://www.cnblogs.com/hustskyking/archive/2012/09/16/3049805.html" target="_blank">博客园</a>.</div>

<p><span><strong>ajax请求管理&mdash;&mdash;</strong>问题提出</span></p>


<p><span>&nbsp;&nbsp;&nbsp; Ajax应用程序虽然很强大且对用户很友好，但是也存在一些问题。</span></p>


<p><span>&nbsp;&nbsp;&nbsp; 如果客户端向服务器发送请求过于频繁，服务器将会陷入对来自多个用户的大量请求的处理中。进而，客户端在等待服务器返回大量的响应时就会变得十分迟钝。</span></p>

<a id="more"></a>
<p><span>&nbsp;&nbsp;&nbsp; <a class="quote_title" title="http1.1" href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html#sec5" target="_blank">HTTP1.1规范</a>中规定一个客户端在同一时刻与同一个域名不能有两个以上的链接。虽然有一些方法能够突破这个限制（诸如使用子域名来处理某些请求），但绝大多数浏览器在同一时刻能够发起的链接也是有限的。</span></p>


<p><span>&nbsp;&nbsp;&nbsp; 当使用XHR时，这个限制将在后台进行处理：你只是根据自己的需求来启动请求，而浏览器在打开连接时将把他们放到队列中逐步发送。当请求比较少或者间隔比较长时，这种工作机制是能够满足需求的；但当在不同时刻，应用程序的各个部分都将发送请求时，这种内建的队列机制就无法提供足够的控制，无法确定请求将在何时发送，哪个请求先发送等。</span></p>


<p><span>&nbsp;&nbsp;&nbsp; 幸好，实现一个能够处理更复杂通信模式的自定义请求管理器并不难~</span></p>


<p><span>&nbsp;&nbsp;&nbsp; 待续……</span></p>
]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;history-article&quot;&gt;本文原始地址在 &lt;a href=&quot;http://www.cnblogs.com/hustskyking/archive/2012/09/16/3049805.html&quot; target=&quot;_blank&quot;&gt;博客园&lt;/a&gt;.&lt;/div&gt;

&lt;p&gt;&lt;span&gt;&lt;strong&gt;ajax请求管理&amp;mdash;&amp;mdash;&lt;/strong&gt;问题提出&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Ajax应用程序虽然很强大且对用户很友好，但是也存在一些问题。&lt;/span&gt;&lt;/p&gt;


&lt;p&gt;&lt;span&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 如果客户端向服务器发送请求过于频繁，服务器将会陷入对来自多个用户的大量请求的处理中。进而，客户端在等待服务器返回大量的响应时就会变得十分迟钝。&lt;/span&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="tech" scheme="http://yoursite.com/tags/tech/"/>
    
      <category term="cnblogs" scheme="http://yoursite.com/tags/cnblogs/"/>
    
  </entry>
  
  <entry>
    <title>Accessing files via ftp</title>
    <link href="http://yoursite.com/2017/02/28/Accessing-files-via-ftp/"/>
    <id>http://yoursite.com/2017/02/28/Accessing-files-via-ftp/</id>
    <published>2017-02-28T22:37:14.000Z</published>
    <updated>2017-03-01T02:16:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>When you have a Windows Azure Web Site, it is possible to access its files via FTP. This includes both the files that are deployed, and the repository and deployment related files.</p>
<p>To connect via FTP, you need the following information:<br><a id="more"></a></p>
<ul>
<li><strong>The FTP host name</strong>, which will be something like waws-prod-blu-001.ftp.azurewebsites.windows.net (the ‘blu’ token might instead be ‘am2’ or ‘db3’ based on location). You’ll find it under the Dashboard tab for your site in the Azure portal.</li>
<li><strong>Your username</strong>: you’ll also find it on the dashboard, under Deployment User. It’s the same as your git username, but prefixed with the site name. <strong>Don’t forget the site name part, or it won’t work!</strong></li>
<li><strong>Your password</strong>: use the same password as when you ‘git push’</li>
</ul>
<p>You can use whatever FTP client you like, but you can’t go wrong if you go with <a href="http://filezilla-project.org/" target="_blank" rel="external">FileZilla</a>. Note that the Windows Explorer FTP support has a tendency to do over-aggressive caching, which can yield unexpected results.</p>
<p>Once you’ve FTP’d, check out File structure on Azure to navigate through the files.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;When you have a Windows Azure Web Site, it is possible to access its files via FTP. This includes both the files that are deployed, and the repository and deployment related files.&lt;/p&gt;
&lt;p&gt;To connect via FTP, you need the following information:&lt;br&gt;
    
    </summary>
    
      <category term="ftp" scheme="http://yoursite.com/categories/ftp/"/>
    
    
      <category term="ftp" scheme="http://yoursite.com/tags/ftp/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Analyzing a git client trace</title>
    <link href="http://yoursite.com/2017/02/26/Analyzing-a-git-client-trace/"/>
    <id>http://yoursite.com/2017/02/26/Analyzing-a-git-client-trace/</id>
    <published>2017-02-26T17:56:23.000Z</published>
    <updated>2017-03-01T02:18:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>After enabling the git trace ([[Investigating issues]]) and performing a git clone or push, you should see something like this:</p>
<pre><code>trace: built-in: git &apos;push&apos; &apos;http://dfowler-nb.redmond.corp.microsoft.com:35954/NuGet199c8e.git&apos; &apos;master&apos;
trace: run_command: &apos;git-remote-http&apos; &apos;http://dfowler-nb.redmond.corp.microsoft.com:35954/NuGet199c8e.git&apos; &apos;http://dfowler-nb.redmond.corp.microsoft.com:35954/NuGet199c8e.git&apos;
trace: run_command: &apos;send-pack&apos; &apos;--stateless-rpc&apos; &apos;--helper-status&apos; &apos;--thin&apos; &apos;http://dfowler-nb.redmond.corp.microsoft.com:35954/NuGet199c8e.git/&apos; &apos;refs/heads/master:refs/heads/master&apos;
* Couldn&apos;t find host dfowler-nb.redmond.corp.microsoft.com in the _netrc file; using defaults
* About to connect() to dfowler-nb.redmond.corp.microsoft.com port 35954 (#0)
*   Trying 10.80.181.12... * connected
* Connected to dfowler-nb.redmond.corp.microsoft.com (10.80.181.12) port 35954 (#0)
* 0x1f8ce40 is at send pipe head!
&gt; GET /NuGet199c8e.git/info/refs?service=git-receive-pack HTTP/1.1
User-Agent: git/1.7.7.msysgit.0.5.ge59f1
Host: dfowler-nb.redmond.corp.microsoft.com:35954
Accept: */*
Pragma: no-cache
</code></pre><a id="more"></a>
<pre><code>&lt; HTTP/1.1 200 OK
&lt; Cache-Control: must-revalidate, no-cache, max-age=0
&lt; Pragma: no-cache
&lt; Transfer-Encoding: chunked
&lt; Content-Type: application/x-git-receive-pack-advertisement
&lt; Expires: Tue, 01 Jan 1980 00:00:00 GMT
&lt; Server: Microsoft-IIS/7.5
&lt; X-AspNet-Version: 4.0.30319
&lt; X-Powered-By: ASP.NET
&lt; Date: Tue, 24 Apr 2012 01:11:05 GMT
&lt;
* Connection #0 to host dfowler-nb.redmond.corp.microsoft.com left intact
trace: built-in: git &apos;send-pack&apos; &apos;--stateless-rpc&apos; &apos;--helper-status&apos; &apos;--thin&apos; &apos;http://dfowler-nb.redmond.corp.microsoft.com:35954/NuGet199c8e.git/&apos; &apos;refs/heads/master:refs/heads/master&apos;
trace: run_command: &apos;pack-objects&apos; &apos;--all-progress-implied&apos; &apos;--revs&apos; &apos;--stdout&apos; &apos;--thin&apos; &apos;--delta-base-offset&apos;
trace: built-in: git &apos;pack-objects&apos; &apos;--all-progress-implied&apos; &apos;--revs&apos; &apos;--stdout&apos; &apos;--thin&apos; &apos;--delta-base-offset&apos;
remote: New deployment received.[K
remote: Updating branch &apos;master&apos;.[K
remote: Preparing deployment for commit id &apos;1d120b515b&apos;.[K
remote: Building web project &apos;MvcAppWithNuGet19.csproj&apos;.[K
remote: C:\dev\github\kudu\Kudu.FunctionalTests\bin\Debug\apps\NuGet199c8e\live\repository\.nuget\nuget.targets(58,9): error : Package restore is disabled by default. To give consent, open the Visual Studio Options dialog, click on Package Manager node and check &apos;Allow NuGet to download missing packages during build.&apos; You can also give consent by setting the environment variable &apos;EnableNuGetPackageRestore&apos; to &apos;true&apos;. [C:\dev\github\kudu\Kudu.FunctionalTests\bin\Debug\apps\NuGet199c8e\live\repository\MvcAppWithNuGet19\MvcAppWithNuGet19.csproj][K
remote: C:\dev\github\kudu\Kudu.FunctionalTests\bin\Debug\apps\NuGet199c8e\live\repository\.nuget\nuget.targets(58,9): error MSB3073: The command &quot;&quot;C:\dev\github\kudu\Kudu.FunctionalTests\bin\Debug\apps\NuGet199c8e\live\repository\.nuget\nuget.exe&quot; install &quot;C:\dev\github\kudu\Kudu.FunctionalTests\bin\Debug\apps\NuGet199c8e\live\repository\MvcAppWithNuGet19\packages.config&quot; -source &quot;&quot; -o &quot;C:\dev\github\kudu\Kudu.FunctionalTests\bin\Debug\apps\NuGet199c8e\live\repository\packages&quot;&quot; exited with code 1. [C:\dev\github\kudu\Kudu.FunctionalTests\bin\Debug\apps\NuGet199c8e\live\repository\MvcAppWithNuGet19\MvcAppWithNuGet19.csproj][K
remote:
remote: Error - Changes committed to remote repository but your website not updated.[K
* Couldn&apos;t find host dfowler-nb.redmond.corp.microsoft.com in the _netrc file; using defaults
* About to connect() to dfowler-nb.redmond.corp.microsoft.com port 35954 (#0)
*   Trying 10.80.181.12... * connected
* Connected to dfowler-nb.redmond.corp.microsoft.com (10.80.181.12) port 35954 (#0)
&gt; POST /NuGet199c8e.git/git-receive-pack HTTP/1.1
User-Agent: git/1.7.7.msysgit.0.5.ge59f1
Host: dfowler-nb.redmond.corp.microsoft.com:35954
Accept-Encoding: deflate, gzip
Content-Type: application/x-git-receive-pack-request
Accept: application/x-git-receive-pack-result
Content-Length: 823407

&lt; HTTP/1.1 200 OK
&lt; Cache-Control: no-cache, max-age=0, must-revalidate
&lt; Pragma: no-cache
&lt; Transfer-Encoding: chunked
&lt; Content-Type: application/x-git-receive-pack-result
&lt; Expires: Fri, 01 Jan 1980 00:00:00 GMT
&lt; Server: Microsoft-IIS/7.5
&lt; X-AspNet-Version: 4.0.30319
&lt; X-Powered-By: ASP.NET
&lt; Date: Tue, 24 Apr 2012 01:11:05 GMT
&lt;
* Connection #0 to host dfowler-nb.redmond.corp.microsoft.com left intact
* Closing connection #0
To http://dfowler-nb.redmond.corp.microsoft.com:35954/NuGet199c8e.git
 * [new branch]      master -&gt; master
</code></pre><p>It’s alot of noise but the only thing you need to know is how to read requests and responses:</p>
<p> “&gt;” denotes a request and “&lt;” denotes a response:</p>
<pre><code>&gt; GET /NuGet199c8e.git/info/refs?service=git-receive-pack HTTP/1.1
    User-Agent: git/1.7.7.msysgit.0.5.ge59f1
    Host: dfowler-nb.redmond.corp.microsoft.com:35954
    Accept: */*
    Pragma: no-cache

    &lt; HTTP/1.1 200 OK
    &lt; Cache-Control: must-revalidate, no-cache, max-age=0
    &lt; Pragma: no-cache
    &lt; Transfer-Encoding: chunked
    &lt; Content-Type: application/x-git-receive-pack-advertisement
    &lt; Expires: Tue, 01 Jan 1980 00:00:00 GMT
    &lt; Server: Microsoft-IIS/7.5
    &lt; X-AspNet-Version: 4.0.30319
    &lt; X-Powered-By: ASP.NET
    &lt; Date: Tue, 24 Apr 2012 01:11:05 GMT
    &lt;
</code></pre><p>See [[Anatomy of a git request]] for more details.</p>
<h2 id="Git-errors"><a href="#Git-errors" class="headerlink" title="Git errors"></a>Git errors</h2><h3 id="Error-in-sideband-demultiplexer"><a href="#Error-in-sideband-demultiplexer" class="headerlink" title="Error in sideband demultiplexer"></a>Error in sideband demultiplexer</h3><pre><code>fatal: The remote end hung up unexpectedly
error: error in sideband demultiplexer
</code></pre><p>The most likely cause of this error is a timeout. This can happen when the request becomes idle for deveral minutes (i.e. no response data is sent back).</p>
<h3 id="bad-line-length-character"><a href="#bad-line-length-character" class="headerlink" title="bad line length character"></a>bad line length character</h3><p>If you see the following:</p>
<pre><code>fatal: protocol error: bad line length character
</code></pre><p>The timeout above is still relevant but when we try to write to the response, ASP.NET hits a null reference and fails. In the git command line output there will be an error but the operation will still continue on the server.</p>
<h3 id="Did-you-run-git-update-server-info-on-the-server"><a href="#Did-you-run-git-update-server-info-on-the-server" class="headerlink" title="Did you run git update-server-info on the server"></a>Did you run git update-server-info on the server</h3><pre><code>fatal: myapp.git/info/refs not found: did you run git update-server-info on the server?
</code></pre><ol>
<li>Make sure you’re using the right url.</li>
<li>Do you see a 404?</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;After enabling the git trace ([[Investigating issues]]) and performing a git clone or push, you should see something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;trace: built-in: git &amp;apos;push&amp;apos; &amp;apos;http://dfowler-nb.redmond.corp.microsoft.com:35954/NuGet199c8e.git&amp;apos; &amp;apos;master&amp;apos;
trace: run_command: &amp;apos;git-remote-http&amp;apos; &amp;apos;http://dfowler-nb.redmond.corp.microsoft.com:35954/NuGet199c8e.git&amp;apos; &amp;apos;http://dfowler-nb.redmond.corp.microsoft.com:35954/NuGet199c8e.git&amp;apos;
trace: run_command: &amp;apos;send-pack&amp;apos; &amp;apos;--stateless-rpc&amp;apos; &amp;apos;--helper-status&amp;apos; &amp;apos;--thin&amp;apos; &amp;apos;http://dfowler-nb.redmond.corp.microsoft.com:35954/NuGet199c8e.git/&amp;apos; &amp;apos;refs/heads/master:refs/heads/master&amp;apos;
* Couldn&amp;apos;t find host dfowler-nb.redmond.corp.microsoft.com in the _netrc file; using defaults
* About to connect() to dfowler-nb.redmond.corp.microsoft.com port 35954 (#0)
*   Trying 10.80.181.12... * connected
* Connected to dfowler-nb.redmond.corp.microsoft.com (10.80.181.12) port 35954 (#0)
* 0x1f8ce40 is at send pipe head!
&amp;gt; GET /NuGet199c8e.git/info/refs?service=git-receive-pack HTTP/1.1
User-Agent: git/1.7.7.msysgit.0.5.ge59f1
Host: dfowler-nb.redmond.corp.microsoft.com:35954
Accept: */*
Pragma: no-cache
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="KuduDevSetup" scheme="http://yoursite.com/categories/KuduDevSetup/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="remote http" scheme="http://yoursite.com/tags/remote-http/"/>
    
  </entry>
  
  <entry>
    <title>running tests</title>
    <link href="http://yoursite.com/2017/02/21/Running-tests/"/>
    <id>http://yoursite.com/2017/02/21/Running-tests/</id>
    <published>2017-02-22T03:56:23.000Z</published>
    <updated>2017-03-02T01:33:09.000Z</updated>
    
    <content type="html"><![CDATA[<div class="row"><br><div class="col-md-6 col-xs-12"><br>First, make sure you look at the [[Getting started]] page for the list of prerequisites, including those under <code>Additional prerequisites to run the functional tests</code>.<br><br>All tests use xunit; this includes the unit tests and functional tests.<br></div><br><div class="col-md-6 col-xs-12"><br>## Unit tests<br>To run the unit tests just use build.cmd or use the VS 2012 XUnit.net runner (or <a href="http://www.testdriven.net/" target="_blank" rel="external">Test Driven .NET</a>) to run them. They are in <code>Kudu.Core.Test</code>.<br><a id="more"></a><br>## Functional tests<br>The functional tests are located in the <code>Kudu.FunctionalTests</code> project. Running them requires the following software to be installed.<br><br>The functional tests take about 10 minutes to run.<br><br>Note that all tests end up reusing the same IIS application to avoid creating a new one for each. By default, it’s called <code>TestRunnerSite</code>. You can configure that under <code>Kudu.FunctionalTests\App.config</code>.<br></div><br></div>
]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;row&quot;&gt;&lt;br&gt;&lt;div class=&quot;col-md-6 col-xs-12&quot;&gt;&lt;br&gt;First, make sure you look at the [[Getting started]] page for the list of prerequisites, including those under &lt;code&gt;Additional prerequisites to run the functional tests&lt;/code&gt;.&lt;br&gt;&lt;br&gt;All tests use xunit; this includes the unit tests and functional tests.&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;div class=&quot;col-md-6 col-xs-12&quot;&gt;&lt;br&gt;## Unit tests&lt;br&gt;To run the unit tests just use build.cmd or use the VS 2012 XUnit.net runner (or &lt;a href=&quot;http://www.testdriven.net/&quot;&gt;Test Driven .NET&lt;/a&gt;) to run them. They are in &lt;code&gt;Kudu.Core.Test&lt;/code&gt;.&lt;br&gt;
    
    </summary>
    
      <category term="KuduDevSetup" scheme="http://yoursite.com/categories/KuduDevSetup/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="kudu" scheme="http://yoursite.com/tags/kudu/"/>
    
      <category term="test" scheme="http://yoursite.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World Hexo</title>
    <link href="http://yoursite.com/2017/02/10/Get-Started-with-Hexo/"/>
    <id>http://yoursite.com/2017/02/10/Get-Started-with-Hexo/</id>
    <published>2017-02-10T14:32:00.000Z</published>
    <updated>2017-03-01T02:21:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<a id="more"></a>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="tech" scheme="http://yoursite.com/tags/tech/"/>
    
      <category term="cnblogs" scheme="http://yoursite.com/tags/cnblogs/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Custom deploymenet</title>
    <link href="http://yoursite.com/2017/01/26/Custom-Deployment-Script/"/>
    <id>http://yoursite.com/2017/01/26/Custom-Deployment-Script/</id>
    <published>2017-01-27T01:50:21.000Z</published>
    <updated>2017-03-01T02:19:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>Note: This page is sourced from a 3-part <a href="http://blog.amitapple.com/post/38417491924/azurewebsitecustomdeploymentpart1" target="_blank" rel="external">blog series</a> which explains the feature in detail.</p>
<p>See also: <a href="https://github.com/projectkudu/kudu/wiki/Customizing-deployments" target="_blank" rel="external">Customizing Deployments</a></p>
<hr>
<p>#Custom Deployment Scripts For Microsoft Azure Web Apps (Websites) Using Git Deployment</p>
<p>The coolest feature on Microsoft Azure Web Apps is the ability to deploy your website using git.<br>Do a <code>git push</code> and bam you’re done and deployed within seconds.<br>The deployment process is automated, the process will look at the files on the git repository and decide which kind of website it is (asp.net, node, …) and based on that will do the required steps for the deployment.</p>
<a id="more"></a>
<p>For example for an MVC web app it’ll find the solution file and determine which project is the actual web app project and with those it’ll msbuild that project, the artifacts from the build will be placed in a temporary folder and only the files that were changed will be copied to the wwwroot location for the actual deployment.</p>
<p>The nice thing is that files that were removed will also be removed on the wwwroot location but only if they were actually deployed the previous time (so files that are generated on the fly on the wwwroot directory won’t be removed).</p>
<p>So what if you want to customize the deployment process, for example you want to run your tests before deploying (or after) and cancel the deployment if they fail?</p>
<p>That’s what the custom deployment feature is about, you just need to add a file to the root of your repository with the name <code>.deployment</code> and the content:</p>
<pre><code>[config]
command = YOUR COMMAND TO RUN FOR DEPLOYMENT
</code></pre><p>this command can be just running a script (batch file) that has all that is required for your deployment, like copying files from the repository to the web root directory for example.</p>
<p>You also get some environment variables that you need in order to get and put things in the right place:</p>
<ul>
<li>DEPLOYMENT_SOURCE - The path for the root of your repository (In Azure).</li>
<li>DEPLOYMENT_TARGET - The wwwroot path (the deployment destination directory).</li>
<li>DEPLOYMENT_TEMP - Path to a temporary directory that will be removed after the deployment.</li>
<li>MSBUILD_PATH - Path to msbuild executable.</li>
</ul>
<p>With all of those you can create your own deployment script, a simple one for example:</p>
<pre><code>@echo off
echo Deploying files...
xcopy %DEPLOYMENT_SOURCE% %DEPLOYMENT_TARGET% /Y
</code></pre><p>This script will copy all of the files from your repository to the wwwroot directory.</p>
<p>But to make things easier, you can use the azure-cli tool which will actually generate a deployment script for you that will do exactly the same deployment process as the default one but now you are able to update that script and add (or remove) your own steps.</p>
<hr>
<h1 id="Custom-Deployment-Script-Generator"><a href="#Custom-Deployment-Script-Generator" class="headerlink" title="Custom Deployment Script Generator"></a>Custom Deployment Script Generator</h1><p><strong>With</strong> Microsoft Azure Web Apps you can deploy your website by simply pushing your git repository, this will automatically deploy your website, and if you want to control this deployment flow you can use the custom deployment feature.</p>
<p>To make it easy on us there is a custom deployment script generator feature in the azure-cli tool that will simplify the whole process, basically it will generate a script that has the same logic as the automatic deployment one only now you can change it and also run it locally to test it.</p>
<p>All you have to do is:</p>
<p>a. Install <a href="http://nodejs.org/" target="_blank" rel="external">node.js</a>, this is required to run the azure-cli tool.</p>
<p>b. Install the <a href="http://www.windowsazure.com/en-us/manage/linux/other-resources/command-line-tools/" target="_blank" rel="external">azure-cli</a> tool, it’ll also give you some cool features on managing azure related resources directly from the command-line:</p>
<pre><code>npm install azure-cli -g
</code></pre><p>c. Go to the root of your repository (from which you deploy your site).</p>
<p>d. Run the custom deployment script generator command:</p>
<pre><code>azure site deploymentscript [options]
</code></pre><p>You can find help on the [options] by using the -h flag.</p>
<p>For example to create a script for deploying an asp.net web application you do the following:</p>
<pre><code>azure site deploymentscript --aspWAP pathToYourWebProjectFile.csproj -s pathToYourSolutionFile.sln
</code></pre><p>Or for deploying a node website:</p>
<pre><code>azure site deploymentscript --node
</code></pre><p>Any of these commands will generate the files required to deploy your site, mainly:</p>
<blockquote>
<ul>
<li>.deployment - Contains the command to run for deploying your site.</li>
<li>deploy.cmd - Contains the deployment script.</li>
</ul>
</blockquote>
<p>Now you can edit the deploy.cmd file and add your custom steps.</p>
<p>Looking at the file you’ll notice that it may look a bit complicated at first but actually most of the code there is to make sure the script can run locally so the place to look for the deployment logic is here:</p>
<pre><code>::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:: Deployment
:: ----------

... [deployment steps]

::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
</code></pre><p>It’ll contain very few steps and that’s the right place to put your custom steps, for example: running your tests.</p>
<p>In this script you’ll also notice the use of a tool called <a href="https://github.com/projectkudu/KuduSync" target="_blank" rel="external">KuduSync</a>, this tool is the publishing tool which copies the website from the repository (or temporary directory) to the wwwroot directory.</p>
<p>The genius of this tool is that it’ll only copy the files that were changed, it’ll also remove the files that don’t exist on the source but only those that were previously on the source so it won’t remove any runtime generated files (it does that by keeping a files list of each deployment, this is what the manifest files are about).</p>
<p>After adding your own logic to the deployment script you can run in locally and test it to make sure it does what you need it to, it’ll publish your site to a sub-directory called <em>artifacts</em> so make sure you’re not add the files there to your repository.</p>
<p>When the script is tested, add the generated files to your repository (.deployment and deploy.cmd, for node also web.config and iisnode.yml) and push your repository to your Microsoft azure web app and see your custom deployment running.</p>
<hr>
<h1 id="Customizing-site-deployment-based-on-site’s-app-settings-in-Azure-Web-Apps-Websites"><a href="#Customizing-site-deployment-based-on-site’s-app-settings-in-Azure-Web-Apps-Websites" class="headerlink" title="Customizing site deployment based on site’s app settings in Azure Web Apps (Websites)"></a>Customizing site deployment based on site’s app settings in Azure Web Apps (Websites)</h1><p><strong>In</strong> previous posts I talked about <a href="/post/38417491924/azurewebsitecustomdeploymentpart1">Microsoft Azure Web App’s custom deployment feature</a> and the <a href="/post/38418009331/azurewebsitecustomdeploymentpart2">tool to easily generate a deployment script</a>, in this post I’ll do a step by step guide on writing a custom deployment script.</p>
<p>Let’s say we have two websites in azure, one is a node.js website and the other is an mvc4 web application, both sites sources are in the same repository so we need a deployment script that handles differently based on which website it is deploying.</p>
<p><a href="https://github.com/amitapl/CustomScriptSample" target="_blank" rel="external">Full sample repository</a></p>
<p>Some Prerequisites:</p>
<ol>
<li>Assuming git is installed and the websites are in a local git repository.</li>
<li>Install <a href="http://nodejs.org/" target="_blank" rel="external">node.js</a>.</li>
<li>Install <a href="http://www.windowsazure.com/en-us/manage/linux/other-resources/command-line-tools/" target="_blank" rel="external">azure-cli</a> by<br>running the following command: <code>npm install azure-cli -g</code></li>
</ol>
<h3 id="a-First-let’s-generate-a-deployment-script-for-the-node-js-website"><a href="#a-First-let’s-generate-a-deployment-script-for-the-node-js-website" class="headerlink" title="(a) First let’s generate a deployment script for the node.js website:"></a>(a) First let’s generate a deployment script for the node.js website:</h3><ul>
<li>Go to the root of the repository.</li>
<li>Enter the following command: <code>azure site deploymentscript --node --sitePath nodejs</code></li>
<li>Where “nodejs” is the path to the node.js website directory.</li>
</ul>
<p><img src="https://cloud.githubusercontent.com/assets/4468967/10491864/aa9bc2c2-725d-11e5-9363-a65393e2c270.png" alt="2012-12-20-azure-website-custom-deployment-part-3_md1"></p>
<ul>
<li>Notice the files that were generated:<blockquote>
<ul>
<li>.deployment - a file telling which command to run for deployment (currently deploy.cmd).</li>
<li>deploy.cmd - the deployment script.</li>
<li>nodejs\web.config - configuration for iis to run node.js.</li>
<li>nodejs\iisnode.yml - this file allows some configuration settings relating to node.js, <a href="http://tomasz.janczuk.org/2012/05/yaml-configuration-support-in-iisnode.html" title="more info on iisnode.yml" target="_blank" rel="external">more info on iisnode.yml</a></li>
</ul>
</blockquote>
</li>
</ul>
<ul>
<li>Rename deploy.cmd to deploy.node.cmd: <code>move deploy.cmd deploy.node.cmd</code></li>
</ul>
<h3 id="b-Let’s-generate-a-deployment-script-for-the-mvc4-web-application"><a href="#b-Let’s-generate-a-deployment-script-for-the-mvc4-web-application" class="headerlink" title="(b) Let’s generate a deployment script for the mvc4 web application:"></a>(b) Let’s generate a deployment script for the mvc4 web application:</h3><p>At the root of the repository enter the command:</p>
<pre><code>azure site deploymentscript --aspWAP mvc4\Mvc4WebApplication\Mvc4WebApplication.csproj -s mvc4\Mvc4WebApplication.sln
</code></pre><p><img src="https://cloud.githubusercontent.com/assets/4468967/10491869/aaa01520-725d-11e5-9a77-9d7410e05f30.png" alt="2012-12-20-azure-website-custom-deployment-part-3_md2"></p>
<ul>
<li>Rename deploy.cmd to deploy.mvc4.cmd: <code>move deploy.cmd deploy.mvc4.cmd</code></li>
</ul>
<p><em>NOTE: You can also edit this generated file (deploy.cmd) with any custom steps you have, you can also test it on your machine simply by running it, it will publish your website to %REPOSITORY_ROOT%\artifacts.</em></p>
<h3 id="c-To-decide-which-script-should-run-based-on-the-website-we-are-currently-deploying-we’ll-use-the-“app-settings”-feature-in-Microsoft-Azure-Web-Apps"><a href="#c-To-decide-which-script-should-run-based-on-the-website-we-are-currently-deploying-we’ll-use-the-“app-settings”-feature-in-Microsoft-Azure-Web-Apps" class="headerlink" title="(c) To decide which script should run, based on the website we are currently deploying, we’ll use the “app settings” feature in Microsoft Azure Web Apps:"></a>(c) To decide which script should run, based on the website we are currently deploying, we’ll use the “app settings” feature in Microsoft Azure Web Apps:</h3><ul>
<li>Create a deploy.cmd file under the root of the repository with the following:</li>
</ul>
<script src="https://gist.github.com/4349245.js"></script>

<ul>
<li><p>%SITE_FLAVOR% will be set by Windows Azure with the value we’ll give it in the management portal.</p>
</li>
<li><p>Add all generated files and commit them to the repository.</p>
</li>
</ul>
<h3 id="d-Now-let’s-try-to-push-our-repository-to-our-Microsoft-Azure-Web-App"><a href="#d-Now-let’s-try-to-push-our-repository-to-our-Microsoft-Azure-Web-App" class="headerlink" title="(d) Now let’s try to push our repository to our Microsoft Azure Web App:"></a>(d) Now let’s try to push our repository to our Microsoft Azure Web App:</h3><pre><code>git push WA master
</code></pre><p><img src="https://cloud.githubusercontent.com/assets/4468967/10491865/aa9d9868-725d-11e5-9ab0-9401ab59076f.png" alt="2012-12-20-azure-website-custom-deployment-part-3_md3"></p>
<ul>
<li><p>We receive an error and the deployment fails since we still haven’t set the app setting yet, so let’s do that.</p>
</li>
<li><p>Go to the website on windows azure management portal and add under the CONFIGURATION tab under “app settings” a setting with name SITE_FLAVOR and value nodejs/mvc3 (based on the current site we’re configuring).</p>
</li>
</ul>
<p><img src="https://cloud.githubusercontent.com/assets/4468967/10491923/0959494c-725e-11e5-84d6-4f2a723d248f.png" alt="2012-12-20-azure-website-custom-deployment-part-3_md4"></p>
<p><img src="https://cloud.githubusercontent.com/assets/4468967/10491867/aa9dda8a-725d-11e5-9203-f54c55176936.png" alt="2012-12-20-azure-website-custom-deployment-part-3_md5"></p>
<ul>
<li><p>Click on the “Save” button.</p>
</li>
<li><p>Now we can either push our changes again (we’ll need a new commit, even an empty one, otherwise it’ll tell us that nothing has changed and the deployment won’t reinitiate).</p>
</li>
<li>Or we can go to the DEPLOYMENTS tab in Windows Azure portal, select the last deployment which failed and push the RETRY button to retry the deployment.</li>
</ul>
<p><img src="https://cloud.githubusercontent.com/assets/4468967/10491868/aaa00efe-725d-11e5-9225-8764e54ab336.png" alt="2012-12-20-azure-website-custom-deployment-part-3_md6"></p>
<h3 id="That’s-it-now-we-have-a-working-mvc4-node-js-website"><a href="#That’s-it-now-we-have-a-working-mvc4-node-js-website" class="headerlink" title="That’s it, now we have a working mvc4/node.js website"></a>That’s it, now we have a working mvc4/node.js website</h3><p><img src="https://cloud.githubusercontent.com/assets/4468967/10491866/aa9ddada-725d-11e5-8311-827ba59a8f05.png" alt="2012-12-20-azure-website-custom-deployment-part-3_md7"></p>
<p><img src="https://cloud.githubusercontent.com/assets/4468967/10491870/aaacacfe-725d-11e5-9395-04018262eb68.png" alt="2012-12-20-azure-website-custom-deployment-part-3_md8"></p>
<p><strong>NOTE: Another improvement we could do here is to store the repository on GitHub/Bitbucket and connect them to our 2 sites, now every time we push to GitHub/Bitbucket, both of our sites will be deployed.</strong></p>
<p>The repository I’ve used can be cloned from <a href="https://github.com/amitapl/CustomScriptSample" target="_blank" rel="external">here</a>.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Note: This page is sourced from a 3-part &lt;a href=&quot;http://blog.amitapple.com/post/38417491924/azurewebsitecustomdeploymentpart1&quot;&gt;blog series&lt;/a&gt; which explains the feature in detail.&lt;/p&gt;
&lt;p&gt;See also: &lt;a href=&quot;https://github.com/projectkudu/kudu/wiki/Customizing-deployments&quot;&gt;Customizing Deployments&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;#Custom Deployment Scripts For Microsoft Azure Web Apps (Websites) Using Git Deployment&lt;/p&gt;
&lt;p&gt;The coolest feature on Microsoft Azure Web Apps is the ability to deploy your website using git.&lt;br&gt;Do a &lt;code&gt;git push&lt;/code&gt; and bam you’re done and deployed within seconds.&lt;br&gt;The deployment process is automated, the process will look at the files on the git repository and decide which kind of website it is (asp.net, node, …) and based on that will do the required steps for the deployment.&lt;/p&gt;
    
    </summary>
    
      <category term="KuduDevSetup" scheme="http://yoursite.com/categories/KuduDevSetup/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="kudu" scheme="http://yoursite.com/tags/kudu/"/>
    
  </entry>
  
  <entry>
    <title>Flexibility of JavaScript</title>
    <link href="http://yoursite.com/2017/01/19/Flexibility-of-JavaScript/"/>
    <id>http://yoursite.com/2017/01/19/Flexibility-of-JavaScript/</id>
    <published>2017-01-19T14:32:00.000Z</published>
    <updated>2017-03-01T02:59:30.000Z</updated>
    
    <content type="html"><![CDATA[<div class="history-article">本文原始地址在 <a href="http://www.cnblogs.com/hustskyking/archive/2012/09/17/3049803.html" target="_blank">博客园</a>.</div>


<p>如果你偏爱过程式编程，你可以这样：</p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">/*Start and stop animations using functions.*/</div><div class="line">function startAnination() &#123;</div><div class="line">    ....</div><div class="line">&#125;</div><div class="line">function stopAnination()&#123;</div><div class="line">    ....</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这种做法很简单，但是你无法创建可以保存状态并且具有一些仅对其内部状态进行操作的方法的动画对象。</p><br><a id="more"></a><br><p>下面的代码定义了一个类，你可以用它创建这种对象：</p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">/*Anim class.*/</div><div class="line"> var Anim = function()&#123;</div><div class="line">    ....</div><div class="line"> &#125;;</div><div class="line"> Anim.prototype.start = function()&#123;</div><div class="line">    ....</div><div class="line"> &#125;;</div><div class="line"> Anim.prototype.stop = function()&#123;</div><div class="line">    ....</div><div class="line"> &#125;;</div><div class="line"></div><div class="line"> /*Usage.*/</div><div class="line"> var myAnim = new Anim();</div><div class="line"> myAnim.start();</div><div class="line"> ....</div><div class="line"> myAnim.stop();</div></pre></td></tr></table></figure>
<p>上述代码定义了一个名为Anim的类，并把两个方法赋给该类的prototype的属性。</p><br><p>如果你更喜欢把类的定义封装在一条声明中，则可以改用下面的代码：</p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">/*Anim class, with a slightly different syntax for declaring methods*/</div><div class="line">var Anim = function()&#123;</div><div class="line">    ....</div><div class="line"> &#125;;</div><div class="line"> Anim.prototype = &#123;</div><div class="line">    start : function()&#123;</div><div class="line">        ....</div><div class="line">    &#125;;</div><div class="line">    stop : function()&#123;</div><div class="line">        ....</div><div class="line">    &#125;;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>这在传统的面向对象程序员看来肯呢过更眼熟一点，他们习惯于看到类的方法声明内嵌在类的</p><br><p>声明之中。要是你以前用过这样的编程风格，可能想尝试下下面的是里。</p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">/*Add method to the Function object that can be used to declare methods*/</div><div class="line">Function.prototype.methed = function(name, fn)&#123;</div><div class="line">    this.prototype[name] = fn;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">/*Anim class, with ,methods created using a conbenience ,method.*/</div><div class="line">var Anim = function()&#123;</div><div class="line">    ....</div><div class="line">&#125;;</div><div class="line">Anim.method(&apos;start&apos;, function()&#123;</div><div class="line">    .....</div><div class="line">&#125;);</div><div class="line">Anim.method(&apos;stop&apos;, function()&#123;</div><div class="line">    ....</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>Function.protytype.method用于为类添加新方法。他有两个参数，第一个是字符串，表示新方法</p><br><p>的名称；第二个是用作新方法的函数。</p>


<p>你可以进一步修改Function.prototype.method, 使其可被链式调用。这只需要在他返回this</p><br><p>值即可：</p>

<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">/*This version alllows the calls to be chained.*/</div><div class="line">Function.prototype.method = function(name, fn)&#123;</div><div class="line">    this.prototype[name] = fn;</div><div class="line">    return this;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">/*Anim class, with methods created using a convenience and chaining.*/</div><div class="line">var Anim = function()&#123;</div><div class="line">    ....</div><div class="line">&#125;;</div><div class="line">Anim.</div><div class="line">    method(&apos;start&apos;, function()&#123;</div><div class="line">        ....</div><div class="line">    &#125;).</div><div class="line">    method(&apos;stop&apos;, function()&#123;</div><div class="line">        ....</div><div class="line">    &#125;);</div></pre></td></tr></table></figure>
<p><br>              </p>
]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;history-article&quot;&gt;本文原始地址在 &lt;a href=&quot;http://www.cnblogs.com/hustskyking/archive/2012/09/17/3049803.html&quot; target=&quot;_blank&quot;&gt;博客园&lt;/a&gt;.&lt;/div&gt;


&lt;p&gt;如果你偏爱过程式编程，你可以这样：&lt;/p&gt;

&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/*Start and stop animations using functions.*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;function startAnination() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ....&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;function stopAnination()&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    ....&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这种做法很简单，但是你无法创建可以保存状态并且具有一些仅对其内部状态进行操作的方法的动画对象。&lt;/p&gt;&lt;br&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://yoursite.com/categories/JavaScript/"/>
    
    
      <category term="tech" scheme="http://yoursite.com/tags/tech/"/>
    
      <category term="cnblogs" scheme="http://yoursite.com/tags/cnblogs/"/>
    
  </entry>
  
  <entry>
    <title>Getting started with kudu</title>
    <link href="http://yoursite.com/2016/02/28/Getting-started-with-kudu/"/>
    <id>http://yoursite.com/2016/02/28/Getting-started-with-kudu/</id>
    <published>2016-02-28T22:56:23.000Z</published>
    <updated>2017-03-01T03:00:05.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Prerequisites-to-run-Kudu-and-functional-tests"><a href="#Prerequisites-to-run-Kudu-and-functional-tests" class="headerlink" title="Prerequisites to run Kudu and functional tests"></a>Prerequisites to run Kudu and functional tests</h3><p>We have recently created a few custom scripts to automate the setup of Kudu development dependencies<br>see the readme for <a href="https://github.com/projectkudu/kudu/tree/master/Setup" target="_blank" rel="external">KuduDevSetup.cmd</a> for details. The new approach has been minimally tested so the older manual instruction below are still worth reading to understand what the new script does. The script requires that <a href="http://www.microsoft.com/web/downloads/platform.aspx" target="_blank" rel="external">WebPI 4.5</a> be installed. Once you have WebPI install simply execute the script from the directory.</p>
<ul>
<li>To fully run functional tests, you will still need to manually execute first two steps from <a href="https://github.com/projectkudu/kudu/wiki/Getting-started#additional-prerequisites-to-run-the-functional-tests" target="_blank" rel="external">Additional prerequisites to run the functional tests</a></li>
</ul>
<a id="more"></a>
<h3 id="Manual-Setup-Instructions"><a href="#Manual-Setup-Instructions" class="headerlink" title="Manual Setup Instructions"></a>Manual Setup Instructions</h3><ul>
<li>Visual Studio 2013. Note that you need to run it as admin. Install/Update to the latest version of NuGet Package Manager (Tools -&gt; Extensions and Updates).</li>
<li>IIS &gt;= 7, configured to run ASP.NET 4.0. This can be installed using <a href="http://www.microsoft.com/web/downloads/platform.aspx" target="_blank" rel="external">WebPI</a>.</li>
<li>Install Git (<a href="http://git-scm.com/downloads" target="_blank" rel="external">http://git-scm.com/downloads</a>) to the default location (we expect it in <code>C:\Program Files (x86)\Git\bin</code>).</li>
<li>Install <a href="http://nodejs.org/" target="_blank" rel="external">Node</a>. Node is used as part of the build process for sites.</li>
</ul>
<p>Note: If you manually install IIS, here is what needs to be enabled:</p>
<p><img src="http://i.imgur.com/ZdFpz.png" alt="Windows Features"></p>
<h3 id="Additional-prerequisites-to-run-the-functional-tests"><a href="#Additional-prerequisites-to-run-the-functional-tests" class="headerlink" title="Additional prerequisites to run the functional tests"></a>Additional prerequisites to run the functional tests</h3><ul>
<li>Install <a href="http://www.microsoft.com/en-us/download/details.aspx?id=15979" target="_blank" rel="external">ASP.NET WebPages 1.0</a></li>
<li>If you don’t see the tests in Test Explorer pane, it may be because you have Xunit runner install as VSIX.  For Xunit 2.0, the runner is installed as part of the project (not VSIX).  To fix, open VS -&gt; TOOLS -&gt; Extensions and Updates …, and uninstall Xunit runner VSIX.</li>
<li>If still don’t see the tests, try remove this folder <code>%TEMP%\VisualStudioTestExplorerExtensions</code>.  See <a href="http://xunit.github.io/docs/running-tests-in-vs.html" target="_blank" rel="external">this</a>.</li>
</ul>
<p>You are done here if you had run <a href="https://github.com/projectkudu/kudu/tree/master/Setup" target="_blank" rel="external">KuduDevSetup.cmd</a>, otherwise continue.</p>
<ul>
<li>Install <a href="http://www.asp.net/mvc/mvc3" target="_blank" rel="external">MVC 3</a>.</li>
<li>Open your %WINDIR%\System32\inetsrv\config\applicationHost.config and look for <code>&lt;applicationPoolDefaults&gt;</code>. Under <code>&lt;processModel&gt;</code>, make sure you don’t have <code>setProfileEnvironment=&quot;false&quot;</code>. If you do, set it to true (or remove the attribute if you are running the latest Windows 8.1).</li>
<li>unzip <a href="https://dl.dropboxusercontent.com/u/2209341/Kudu_Progx86_Msbuild_Microsoft_VisualStudio.zip" target="_blank" rel="external">this file</a> and copy the contents into your <code>\Program Files (x86)\MSBuild\Microsoft\VisualStudio</code>. This brings in various files from older VS versions that you may not have installed.</li>
<li>Install the <a href="http://www.iis.net/download/URLRewrite" target="_blank" rel="external">URL rewrite module for IIS</a>.</li>
<li>Install <a href="https://github.com/Azure/iisnode/releases/download/v0.2.11/iisnode-full-v0.2.11-x64.msi" target="_blank" rel="external">IISNode</a></li>
<li>Pretend to have the 32 bit version of Node to fool the version detection logic:<ul>
<li>Copy your <code>\Program Files\nodejs</code> folder to \Program Files (x86)\nodejs.</li>
<li>Under <code>\Program Files (x86)\nodejs</code>, you need to have a folder named <code>0.8.2</code>, and containing <a href="http://nodejs.org/dist/v0.8.2/node.exe" target="_blank" rel="external">node.exe version 0.8.2</a>. And then same deal for Node 0.10.5 (you can put the 0.8.2 exe in the 0.10.5 folder; it’s the folder that matters). Yes, this is kind of painful, and we need to make it easier!</li>
</ul>
</li>
<li>Install <a href="http://mercurial.selenic.com/downloads" target="_blank" rel="external">Mercurial</a> to the default location (we expect it in <code>C:\Program Files (x86)\Mercurial</code>)</li>
</ul>
<h3 id="Deploying-your-first-application"><a href="#Deploying-your-first-application" class="headerlink" title="Deploying your first application"></a>Deploying your first application</h3><ol>
<li><p>First clone the repository.</p>
<pre><code>git clone git://github.com/projectkudu/kudu.git
</code></pre></li>
<li><p>Open Kudu.sln as <strong>Administrator</strong> and build it.</p>
</li>
<li><p>Set <strong>Kudu.Web</strong> as the startup project and run!</p>
</li>
</ol>
<p>After running Kudu.Web, you should be able to use the dashboard to manage your application. Below is a walk through on how to create and deploy your first application using git.</p>
<h3 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>Create an application.</p>
<p><img src="http://i.imgur.com/pScf7.png" alt="Step 1"></p>
<h3 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h3><p>Give it a name.</p>
<p><img src="http://i.imgur.com/xebWn.png" alt="Step 2"></p>
<h3 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h3><p>Copy the git url and push.</p>
<p><img src="http://i.imgur.com/vsWqb.png" alt="Step 3"></p>
<h3 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h3><p>You’re live!</p>
<p><img src="http://i.imgur.com/zN5lf.png" alt="Step 4"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Prerequisites-to-run-Kudu-and-functional-tests&quot;&gt;&lt;a href=&quot;#Prerequisites-to-run-Kudu-and-functional-tests&quot; class=&quot;headerlink&quot; title=&quot;Prerequisites to run Kudu and functional tests&quot;&gt;&lt;/a&gt;Prerequisites to run Kudu and functional tests&lt;/h3&gt;&lt;p&gt;We have recently created a few custom scripts to automate the setup of Kudu development dependencies&lt;br&gt;see the readme for &lt;a href=&quot;https://github.com/projectkudu/kudu/tree/master/Setup&quot;&gt;KuduDevSetup.cmd&lt;/a&gt; for details. The new approach has been minimally tested so the older manual instruction below are still worth reading to understand what the new script does. The script requires that &lt;a href=&quot;http://www.microsoft.com/web/downloads/platform.aspx&quot;&gt;WebPI 4.5&lt;/a&gt; be installed. Once you have WebPI install simply execute the script from the directory.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To fully run functional tests, you will still need to manually execute first two steps from &lt;a href=&quot;https://github.com/projectkudu/kudu/wiki/Getting-started#additional-prerequisites-to-run-the-functional-tests&quot;&gt;Additional prerequisites to run the functional tests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="KuduDevSetup" scheme="http://yoursite.com/categories/KuduDevSetup/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="kudu" scheme="http://yoursite.com/tags/kudu/"/>
    
      <category term="setup" scheme="http://yoursite.com/tags/setup/"/>
    
  </entry>
  
</feed>
